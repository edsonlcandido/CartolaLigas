@page "/teams/add-own"
@using System.Text.Json.Serialization
@using CartolaLigas.Models.Cartola
@using CartolaLigas.DTOs
@using System.Text.Json
@using System.Text
@inject TimeService TimeService
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider


<h3 class="text-center mb-4">Pesquisa de times</h3>

<div class="d-flex justify-content-center">
	<div class="input-group mb-3" style="max-width: 400px;">
		<input @bind="searchQuery" class="form-control" placeholder="Digite o nome do time" />
		<button class="btn btn-primary" @onclick="SearchTeams">
			<i class="fa-solid fa-magnifying-glass"></i>
		</button>
	</div>
</div>

@if (isSearching)
{
	<div class="d-flex flex-column align-items-center">
		<div class="spinner-border text-primary" role="status">
			<span class="visually-hidden">Carregando...</span>
		</div>
		<p>Pesquisando times...</p>
	</div>
}

@if (teams != null)
{
	if (teams[0].Nome == null)
	{
		<div class="d-flex flex-column align-items-center">
			<p>Sem resultados</p>
		</div>
	}
	else
	{
		<div class="d-flex flex-column align-items-center">
			@foreach (var team in teams)
			{
				<TeamCard Team="@team">
					<ActionTemplate>
						<button class="btn btn-primary" @onclick="() => AddTeam(team)"><i class="fa fa-link"></i></button>
					</ActionTemplate>
				</TeamCard>
			}
		</div>
	}

}

@code {
	private string searchQuery;
	private List<Models.Cartola.Time> teams;
	private bool isSearching = false;
	private string? errorMessage = null;

	private async Task SearchTeams()
	{
		teams = null;
		isSearching = true;
		StateHasChanged();

		teams = await TimeService.SearchTeams(searchQuery);
		if (teams[0].Nome == null)
		{
			errorMessage = "Nenhum time encontrado";
		}

		isSearching = false;
		StateHasChanged();
	}

	private async Task AddTeam(Models.Cartola.Time team)
	{
            Models.Time time = new Models.Time()
			{
				Slug = team.Slug,
				NomeCartola = team.NomeCartola,
				CartolaTimeId = team.TimeId,
				Name = team.Nome
			};
		var response = TimeService.AddOwnTeam(time);
		if (response != null)
		{
			navigationManager.NavigateTo("/home");
		}
	}
}
